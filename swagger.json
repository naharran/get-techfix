{
    "openapi": "3.0.0",
    "info": {
        "title": "User API",
        "version": "1.0.0",
        "description": "API for user management including signup, profile completion, and login"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Local Development Server"
        }
    ],
    "tags": [
        {
            "name": "User",
            "description": "User management and authentication"
        }
    ],
    "paths": {
        "/api/users/signup": {
            "post": {
                "tags": ["User"],
                "summary": "Sign up a new user",
                "description": "Register a new user in the system and in Auth0.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    }
                                },
                                "required": ["email", "password", "firstName", "lastName"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registration successful"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users/complete-profile": {
            "patch": {
                "tags": ["User"],
                "summary": "Complete user profile",
                "description": "Allows users to complete their profile after registration.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userType": {
                                        "type": "string"
                                    },
                                    "apartmentId": {
                                        "type": "string"
                                    },
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "locations": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": ["userType"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "tags": ["User"],
                "summary": "Login for existing users",
                "description": "Authenticate an existing user and return a token.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/apartments/create": {
            "post": {
                "tags": ["Apartment"],
                "summary": "Create a new apartment",
                "description": "Creates a new apartment record.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                },
                                "required": ["name", "address"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Apartment created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/apartments/": {
            "get": {
              "tags": ["Apartment"],
              "summary": "Get a list of apartments with optional search parameters",
              "description": "Retrieve apartments, optionally filtered by resident name, email, address, or apartment name.",
              "parameters": [
                {
                  "in": "query",
                  "name": "residentName",
                  "schema": { "type": "string" },
                  "description": "Optional resident name to filter apartments."
                },
                {
                  "in": "query",
                  "name": "residentEmail",
                  "schema": { "type": "string" },
                  "description": "Optional resident email to filter apartments."
                },
                {
                  "in": "query",
                  "name": "address",
                  "schema": { "type": "string" },
                  "description": "Optional address to filter apartments."
                },
                {
                  "in": "query",
                  "name": "apartmentName",
                  "schema": { "type": "string" },
                  "description": "Optional apartment name to filter apartments."
                }
              ],
              "responses": {
                "200": {
                  "description": "A list of apartments",
                  "content": {
                    "application/json": {
                      "schema": { "$ref": "#/components/schemas/Apartment" }
                    }
                  }
                }
              }
            }
          },
          "/api/apartment/resident/{residentId}": {
            "get": {
              "tags": ["Apartment"],
              "summary": "Get apartments by resident ID",
              "description": "Retrieve apartments based on a specific resident's ID.",
              "parameters": [
                {
                  "in": "path",
                  "name": "residentId",
                  "required": true,
                  "schema": { "type": "string" },
                  "description": "The ID of the resident."
                }
              ],
              "responses": {
                "200": {
                  "description": "Apartments for the specified resident",
                  "content": {
                    "application/json": {
                      "schema": { "$ref": "#/components/schemas/Apartment" }
                    }
                  }
                }
              }
            }
          },
          "/api/apartments/apartments-summary": {
            "get": {
              "tags": ["Apartment"],
              "summary": "Get summary of apartments",
              "description": "Retrieve a summary of each apartment including details of residents and count of open issues.",
              "responses": {
                "200": {
                  "description": "Summary of apartments",
                  "content": {
                    "application/json": {
                      "schema": { "$ref": "#/components/schemas/ApartmentSummary" }
                    }
                  }
                }
              }
            }
          }
        },
        "components": {
          "schemas": {
            "Apartment": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "address": { "type": "string" },
                "coordinates": {
                  "type": "object",
                  "properties": {
                    "lat": { "type": "number" },
                    "lon": { "type": "number" }
                  }
                },
                "residents": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "issues": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            },
            "ApartmentSummary": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "address": { "type": "string" },
                "issuesCount": { "type": "number" },
                "residents": {
                  "type": "array",
                  "items": { "type": "object" }
                }
              }
            }
          }
        
    
    }
}
